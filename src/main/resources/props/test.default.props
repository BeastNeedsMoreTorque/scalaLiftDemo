# FOR SCALATEST

product.shortCategories={"wine":"Wine","spirits":"Spirits","beer":"Beer"}

db.driver=org.postgresql.Driver

# choose available port and suitable host and driver url (liftweb offered "jdbc:h2:lift_proto.db;AUTO_SERVER=TRUE")
db.url=jdbc:postgresql://localhost:5432
#specify db.user, db.password for dev if required. Phil Derome's toy environment does not require this.

# time out in ms when we consume a web api.
http.ClientConnTimeOut=5000
# different value to prove a point
http.ClientReadTimeOut=8000
lcboDomain=lcboapi.com
DBWrite.BatchSize=1024

radio.selectClass=thickBorder
radio.unselectClass=thinBorder

# implied with LCBO tests (40 throws and then it can wipe out cache!)
product.lcboMaxPerPage=20
product.query.ByCategoryArgs={"list":[{"k":"where_not","v":"is_discontinued,is_dead"}, {"k":"order","v":"inventory_count.desc"}]}
# application product designer believes all items of relevance are not discontinued nor dead, so developer allows him to assign this view at run-time to the concept of "all items".
# In general our policy or interpretation of how we should use the WEB API should be run-time attributes and not hard coded
# (open question as to end-user having such choice, convention over configuration I often hear them say?).
product.query.Filter={"list":[{"k":"where_not","v":""is_discontinued,is_dead""}]}

product.CategoriesMap={"list":[{"k":"wine","v":"Wine"},{"k":"spirits","v":"Spirits"},{"k":"beer","v":"Beer"},{"k":"ciders","v":"Ciders"},{"k":"coolers","v":"Ready-to-Drink/Coolers"},{"k":"non-Alc","v":"Accessories andNon-Alcohol Items"}]}
product.CategoriesImageMap={"list":[{"k":"wine","v":"/images/wineGlassPour.jpg"},{"k":"spirits","v":"/images/brandy.jpg"},{"k":"beer","v":"/images/beerGlass.jpg"},{"k":"ciders","v":"/images/ciderGlass.jpg"},{"k":"coolers","v":"/images/coolerGlass.jpg"},{"k":"non-Alc","v":"/images/giftBox.jpg"}]}

#No order on a map, so we impose an order on the keys
product.Categories=wine:spirits:beer:ciders:coolers:non-Alc
product.Category=wine
product.DBBatchSize=512
product.cacheSize=20000

product.size.NAME=120
product.size.ADDRESS=200
product.size.IMAGE_URL=200
product.size.ORIGIN=200
product.size.PACKAGE=80
product.size.PRIMARY_CATEGORY=40
product.size.SECONDARY_CATEGORY=80
product.size.VARIETAL=100
product.size.DESCRIPTION=2000
product.size.SERVING_SUGGESTION=300

# When going synchronously to select products of a category, we'll request no more than store.maxSampleSize from LCBO
store.maxSampleSize=60
# implied with LCBO tests as max we can query on a page
store.lcboMaxPerPage=40
# careful observer will notice it's not same value as for product.
store.query.Filter={"list":[{"k":"where_not","v":"is_dead"}]}
store.useRandomSeed=false
# in "deterministic or false mode", change this number to get different types of runs.
# for unit test set to 411
store.fixedRNGSeed=411
inventory.lcboMaxPerPage=50

store.size.NAME=200
store.size.ADDRESS=200
store.size.CITY_NAME=30